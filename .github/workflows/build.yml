name: Build-Solution

on: 
  push:
    paths-ignore:
      - '**.md'
      
env:
  API_LOCATION: ./Source/API
  UI_LOCATION: ./Source/UI

jobs:
  Build-API-Solution:
    if: ${{ false }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{env.API_LOCATION}}
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Install dependencies
        run: dotnet restore 
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal

  Build-ACR-Solution:
    if: ${{ false }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: ACR build
        id: acr
        uses: azure/acr-build@v1
        with:
          service_principal: ${{ secrets.service_principal_id }}
          service_principal_password: ${{ secrets.service_principal_password }}
          tenant: ${{ secrets.tenant }}
          registry: ${{ secrets.registry }}
          repository: ${{ secrets.dotnet }}
          image: image
          git_access_token: ${{ secrets.git_access_token }}
          folder: _TheApplication/Source/API\
          dockerfile: _TheApplication\Source\API\DockerFile
          branch: master
          build_args: ''

  Build-UI-Solution:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './Source/ui'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
