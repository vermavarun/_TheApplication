name: Build-Solution

on: 
  push:
    paths-ignore:
      - '**.md'
      
env:
  API_LOCATION: ./Source/API
  UI_LOCATION: ./Source/UI

jobs:
  Build-API:
    if: ${{ false }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{env.API_LOCATION}}
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
      - name: Install dependencies
        run: dotnet restore 
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal
      - name: Publish
        run: dotnet publish --configuration Release --no-build --output "${{ github.workspace }}/Source/Api/publish"
      
      - name: upload deployable package to the run instance
        uses: actions/upload-artifact@v3
        with:
          name: release-artifact-api.zip
          path: ${{ github.workspace }}/Source/Api/publish

  Deploy-API:
    if: ${{ false }}
    needs: [Build-API]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Azure SPN Certificate file inside the runner
        env:
          CERT: ${{ secrets.CERTIFICATE }}
        run: |
          echo "$CERT" > file.pem
      
      - name: Login to Azure
        run: |
          az login --service-principal -u ${{ secrets.SPN_ID }} -p file.pem --tenant ${{ secrets.Tenant_ID }}
      - name: Download Release
        uses: actions/download-artifact@v3
        with:
          name: release-artifact-api.zip
      
      - name: RUN Commands
        run: |
          ls -l
      
      - name: Zip release artifact
        run: |
          zip -r release-artifact-api.zip . -x file.pem
      - name: 'Deploy API'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: vv-api
          package: './release-artifact-api.zip'
          startup-command: 'dotnet api.dll'

      - name: logout
        run: |
          az logout 

  Push-Images:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{env.API_LOCATION}}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Azure SPN Certificate file inside the runner
        env:
          CERT: ${{ secrets.CERTIFICATE }}
        run: |
          echo "$CERT" > file.pem
      
      - name: Login to Azure
        run: |
          az login --service-principal -u ${{ secrets.SPN_ID }} -p file.pem --tenant ${{ secrets.Tenant_ID }}

      - name: Build api Image
        run: |
          ls -l
          docker build -t ${{vars.ACR_NAME}}.azurecr.io/api .
          docker push ${{vars.ACR_NAME}}.azurecr.io/api

      - name: logout
        run: |
          az logout 

  Build-UI:
    if: ${{ false }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './Source/ui'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: 'Create env file'
        run: |
          touch .env
          echo REACT_APP_API_URL=${{ vars.REACT_APP_API_URL }} >> .env
          cat .env

      - run: npm ci
      - run: npm test
      - run: npm run build --if-present

      - name: upload deployable package to the run instance
        uses: actions/upload-artifact@v3
        with:
          name: release-artifact.zip
          path: ${{ github.workspace }}/Source/ui/build/

  Deploy-UI:
    if: ${{ false }}
    needs: [Build-UI]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Azure SPN Certificate file inside the runner
        env:
          CERT: ${{ secrets.CERTIFICATE }}
        run: |
          echo "$CERT" > file.pem
      
      - name: Login to Azure
        run: |
          az login --service-principal -u ${{ secrets.SPN_ID }} -p file.pem --tenant ${{ secrets.Tenant_ID }}

      - name: Download Release
        uses: actions/download-artifact@v3
        with:
          name: release-artifact.zip
      
      - name: RUN Commands
        run: |
          ls -l
      
      - name: Zip release artifact
        run: |
          zip -r release-artifact.zip . -x file.pem

      - name: 'Deploy UI'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: vv-ui
          package: './release-artifact.zip'
          startup-command: 'pm2 serve /home/site/wwwroot/ --no-daemon --spa'

      - name: logout
        run: |
          az logout 
